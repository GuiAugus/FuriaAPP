@page "/noticias"
@using FuriaAPP.Shared.DTOs.Usuario
@using System.Net.Http.Json
@inject HttpClient Http
@inject NavigationManager NavigationManager

<h1 class="mb-4">Notícias de E-Sports</h1>

@if (noticias == null)
{
    <div class="text-center">
        <div class="spinner-border text-primary" role="status">
            <span class="visually-hidden">Carregando...</span>
        </div>
    </div>
}
else if (!noticias.Any())
{
    <div class="alert alert-info">Nenhuma notícia disponível no momento</div>
}
else
{
    <div class="row">
        @foreach (var noticia in noticias)
        {
            <div class="col-md-6 mb-4">
                <div class="card h-100">
                    <div class="card-body">
                        <h5 class="card-title">@noticia.Titulo</h5>
                        <h6 class="card-subtitle mb-2 text-muted">
                            @noticia.DataPublicacao.ToString("dd/MM/yyyy HH:mm")
                            @if (noticia.JogoId.HasValue)
                            {
                                <span class="badge bg-primary ms-2">Jogo ID: @noticia.JogoId</span>
                            }
                        </h6>
                        <p class="card-text">
                            @(noticia.Conteudo?.Length > 100 ? noticia.Conteudo.Substring(0, 100) + "..." : noticia.Conteudo)
                        </p>
                        <button @onclick="@(() => NavigateToNoticia(noticia.Id))" 
                                class="btn btn-primary">
                            Ler mais
                        </button>
                    </div>
                </div>
            </div>
        }
    </div>
}

@code {
    private List<NoticiaDto> noticias = new();

    protected override async Task OnInitializedAsync()
    {
        await CarregarNoticias();
    }

    private async Task CarregarNoticias()
    {
        try
        {
            // Carrega todas as notícias inicialmente
            var response = await Http.GetAsync("api/noticia");
            
            if (response.IsSuccessStatusCode)
            {
                noticias = await response.Content.ReadFromJsonAsync<List<NoticiaDto>>() ?? new();
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Erro ao carregar notícias: {ex.Message}");
        }
    }

    private void NavigateToNoticia(int id)
    {
        NavigationManager.NavigateTo($"/noticia/{id}");
    }
}